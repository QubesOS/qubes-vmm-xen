From 1688e974cce29545929e9737a40acbfa90c92d85 Mon Sep 17 00:00:00 2001
From: Roger Pau Monne <roger.pau@citrix.com>
Date: Mon, 30 Sep 2024 10:16:33 +0200
Subject: [PATCH] iommu/amd-vi: do not error if IOMMU or PCI Host bridge is not
 covered
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

We have reports of some systems not having the PCI devices that match the Host
bridge of the IOMMU itself listed as handled by the IOMMU.  If that's the case
print a warning message instead of an error.

Signed-off-by: Roger Pau Monn√© <roger.pau@citrix.com>
---
 xen/drivers/passthrough/amd/iommu_acpi.c | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/xen/drivers/passthrough/amd/iommu_acpi.c b/xen/drivers/passthrough/amd/iommu_acpi.c
index 3f5508eba049..2573f59abcfd 100644
--- a/xen/drivers/passthrough/amd/iommu_acpi.c
+++ b/xen/drivers/passthrough/amd/iommu_acpi.c
@@ -248,6 +248,29 @@ static int __init register_range_for_device(
     iommu = find_iommu_for_device(seg, bdf);
     if ( !iommu )
     {
+        const struct pci_dev *pdev;
+
+        for_each_amd_iommu(iommu)
+        {
+            if ( iommu->seg == seg && iommu->bdf == bdf )
+            {
+                AMD_IOMMU_WARN("IVMD: IOMMU %pp not covered by IVRS\n",
+                               &PCI_SBDF(seg, bdf));
+                return 0;
+            }
+        }
+
+        pcidevs_lock();
+        pdev = pci_get_pdev(NULL, PCI_SBDF(seg, bdf));
+        /* No need to hold the lock - the device can't be removed at init. */
+        pcidevs_unlock();
+        if ( pdev && pdev->type == DEV_TYPE_PCI_HOST_BRIDGE )
+        {
+            AMD_IOMMU_WARN("IVMD: PCI Host bridge %pp not covered by IVRS\n",
+                           &PCI_SBDF(seg, bdf));
+            return 0;
+        }
+
         AMD_IOMMU_ERROR("IVMD: no IOMMU for Dev_Id %#x\n", bdf);
         return -ENODEV;
     }
-- 
2.46.0

